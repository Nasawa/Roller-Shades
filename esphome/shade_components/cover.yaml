cover:
  - platform: template
    name: "Shade"
    id: shade
    device_class: shade
    optimistic: true # Set to false to update position based on actual feedback
    assumed_state: true
    has_position: true
    position_action:
      then:
        - globals.set:
            id: target_position
            value: !lambda return pos * 100;
        - logger.log:
            format: "Setting target position to %f"
            args: ["pos * 100"]
        - if:
            condition:
              lambda: "return id(current_encoder_percent).state != id(target_position);"
            then:
              - if:
                  condition:
                    lambda: "return id(current_encoder_percent).state < id(target_position);"
                  then:
                    script.execute: motor_up
                  else:
                    script.execute: motor_down
    open_action:
      - logger.log:
          format: "Attempting to open. Encoder state: %f"
          args: ["id(current_encoder_percent).state"]
      - if:
          condition:
            lambda: "return id(override_encoder) || id(current_encoder_percent).state < 100;"
          then:
            - globals.set:
                id: target_position
                value: "100"
            - script.execute: motor_up
    close_action:
      - if:
          condition:
            lambda: "return id(override_encoder) || id(current_encoder_percent).state > 0;"
          then:
            - globals.set:
                id: target_position
                value: "0"
            - script.execute: motor_down
    stop_action:
      then:
        - script.execute: motor_stop
    lambda: |-
        if (id(shade).position == 0) {
          return COVER_CLOSED;
        } else if (id(shade).position == 1) {
          return COVER_OPEN;
        } else {
          return {};
        }